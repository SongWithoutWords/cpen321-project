import React, { Component } from "react";
import { View, StyleSheet, ScrollView, AppRegistry } from "react-native";
import PrescriptionCardComponent from "../components/cardComponents/PrescriptionCardComponent";

import PushNotification from "react-native-push-notification";

const fake_prescriptions = [
  {
    name: "divalproex",
    avatar_url: "https://bit.ly/2yhPJY0",
    subtitle: "..",
    image_name: "divalproex" // index into the images array in the card component
  },
  {
    name: "amoxicillin",
    avatar_url: "https://bit.ly/2yhPJY0",
    subtitle: "..",
    image_name: "amoxicillin"
  },
  {
    name: "divalproex",
    avatar_url: "https://bit.ly/2yhPJY0",
    subtitle: "..",
    image_name: "divalproex" // index into the images array in the card component
  },
  {
    name: "amoxicillin",
    avatar_url: "https://bit.ly/2yhPJY0",
    subtitle: "..",
    image_name: "amoxicillin"
  },
];

class PrescriptionListScreen extends Component {
  
  // https://github.com/zo0r/react-native-push-notification
  componentDidMount(){
    PushNotification.configure({

      // (optional) Called when Token is generated (iOS and Android)
      onRegister: function(token) {
          console.log( 'TOKEN:', token );
      },
  
      // (required) Called when a remote or local notification is opened or received
      onNotification: function(notification) {
          console.log( 'NOTIFICATION:', notification );
  
          // process the notification
  
          // required on iOS only (see fetchCompletionHandler docs: https://facebook.github.io/react-native/docs/pushnotificationios.html)
          notification.finish(PushNotificationIOS.FetchResult.NoData);
      },
  
      // Should the initial notification be popped automatically
      // default: true
      popInitialNotification: false,
  
      /**
        * (optional) default: true
        * - Specified if permissions (ios) and token (android and ios) will requested or not,
        * - if not, you must call PushNotificationsHandler.requestPermissions() later
        */
      requestPermissions: true,
    });

    PushNotification.localNotificationSchedule({

      date: new Date(Date.now() + (5 * 1000)),

      /* Android Only Properties */
      id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: "My Notification Ticker", // (optional)
      autoCancel: true, // (optional) default: true
      largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
      smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
      subText: "This is a subText", // (optional) default: none
      color: "purple", // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: 'some_tag', // (optional) add tag to message
      group: "group", // (optional) add group to message
      ongoing: false, // (optional) set whether this is an "ongoing" notification
      priority: "high", // (optional) set notification priority, default: high
      visibility: "private", // (optional) set notification visibility, default: private
      importance: "high", // (optional) set notification importance, default: high

      /* iOS and Android properties */
      title: "My Notification Title", // (optional)
      message: "My Notification Message", // (required)
      playSound: true, // (optional) default: true
      soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
      number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
      repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
      actions: '["Yes", "No"]',  // (Android only) See the doc for notification actions to know more
    });
}
  
  onPress = () => {
    this.props.navigation.navigate("PrescriptionInfo");
  };

  render() {
    return (
      <View>
        <ScrollView>
          {fake_prescriptions.map((prescription,i) => {
            return (
              <PrescriptionCardComponent
                title={prescription.name}
                subtitle={prescription.subtitle}
                image_name={prescription.image_name}
                onPress={this.onPress}
                key={i}
              />
            );
          })}
        </ScrollView>
      </View>
    );
  }
}


export default PrescriptionListScreen;
AppRegistry.registerComponent('PrescriptionListScreen', () => PrescriptionListScreen);